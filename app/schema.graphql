scalar JSON

type Query{

    hello:String!
    GetUser(username:String!,password:String!):LoginData

    # periods
    GetAllPeriods:[Period]

    # leader
    GetAllLeader:[Leader]
    GetLeaderById(id:Int!):Leader
    GetLeaderByPeriodId(period_id:Int!):[Leader]

    # assistant
    GetAllAssistant:[Assistant]
    GetAssistantById(id:Int!):Assistant
    GetAssistantByPeriodId(period_id:Int!):[Assistant]
}

type Mutation{
    #period
    InsertPeriod(description:String!, start:String!, end:String!):Boolean
    UpdatePeriod(id: Int!, description:String!, start:String!, end:String!):Boolean
    DeletePeriod(id: Int!):Boolean

    #leader
    InsertLeader(period_id:Int!, initial:String!, name:String!):Boolean
    UpdateLeader(id:Int!, initial:String!, name:String!):Boolean
    DeleteLeader(id:Int!):Boolean

    #assistant
    InsertAssistant(period_id:Int!, leader_id:Int!, initial:String!, name:String!):Boolean
    UpdateAssistant(id:Int!, period_id:Int!, leader_id:Int!, initial:String!, name:String!):Boolean
    DeleteAssistant(id: Int!):Boolean

}

type Assistant{
    id: Int
    period_id: Int
    leader_id: Int
    initial: String
    name: String
}

type Leader{
    id: Int
    period_id:Int
    initial: String
    name: String
}

type User{
    Major:String
    Name:String
    Role:String
    UserId:String
    UserName:String
}
type Period{
    id: Int
    description: String
    start: String
    end: String
}

type LoginData{
    UserData: User
    Token: String
}
